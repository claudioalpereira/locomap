
@{

    ViewBag.Title = "Map4";
    Layout = "../Shared/_Layout2.cshtml";

}



@* table specific *@
<link rel="stylesheet" href="~/Content/tablestyle1.css">

<link rel="stylesheet" href="~/Content/leaflet-1.2.0.css" />






<style>
    /* https://stackoverflow.com/questions/11677886/twitter-bootstrap-div-in-container-with-100-height */
    #map-container, #map-row, #map{
        min-height:100%;
        height:100%;
    }

    body {
        /*padding-top: 4.5rem;*/
        padding-top: 4.5rem;
        padding-left:0px;
        padding-right:0px;
    }
    #map-container{
        padding-left:0px;
        padding-right:0px;

    }
        
    .locoprop-name{
        display:none;
    }
    #app-short-name{
            display:none;
    }
      
            
    @@media (max-width: 480px) {
        .locoprop-name{
            display:table-cell;
        }
        .responstable th:nth-child(2) .hide-when-small{
            display:none;
        }

        /* make Loco column skinny on mobile view */
        /*tbody > tr:nth-child(1) > th, .responstable th:nth-child(1){*/
        th, td{
            display : flex;
            padding:0px;
            margin:0px;
        }
        td{
            margin:4px;
        }
        #app-short-name{
            display:block;
        }
    }


    /* https://gis.stackexchange.com/questions/62491/sizing-leaflet-map-inside-bootstrap
    tr {
        width: 100%;
        display: inline-table;
        table-layout: fixed;
    }

    table{
        height:100%;              // <-- Select the height of the table
        display: -moz-groupbox;    // Firefox Bad Effect
    }
    tbody{
        overflow-y: scroll;
        height: 100%;            //  <-- Select the height of the body
        width: 100%;
        position: absolute;
    }
    */

    .oneShadeOfGrey{
        background-color: #f5f5f5;
        font-weight: bold;
    }
}
</style>


@* Content *@
<div id="map-container" class="container-fluid no-gutters">
    <div id="map-row" class="row no-gutters">
        <div id="map" class="col-sm-4 rounded">

        </div>
        <div id="table_wrapper" class="col-sm-8" style="overflow-y:scroll;">
               
        </div>
    </div>
</div>


@section scripts{


@*
    +++++++++++++++++++++++++++++++++++++++++++++
        page js
    +++++++++++++++++++++++++++++++++++++++++++++
*@
    
<script>

    var locos = [];

    function updateTable() {
        $.ajax({

            url: '@Url.Action("GetLocos", "Home")',
            type: "GET",
            dataType: "html",
            //data: { id: 1 },//this is as per your requirement
            success: function (data) {
                $('#table_wrapper').html(data);
            },
        });
    }

    @* makes the ajax call the first time just in case signalr failes to retrieve data *@
    $(document).ready(updateTable);
   
    var zoom;
    function table_loco_click(elem, loc) {

        if (zoom == loc) {

            $('.oneShadeOfGrey').removeClass('oneShadeOfGrey');
            resetFit();
            zoom = null;

        } else {

            $('td').removeClass('oneShadeOfGrey'); // if any
            $("tr[data-loco='"+loc+"'] td").addClass('oneShadeOfGrey');
            
            //var marker = markers.find(function (l) { l.Loco == loc; }); // not supported on IE
            var marker = $.grep(markers, function (l) { return l.Loco == loc; })[0];

            fit(marker);
            zoom = loc;
        }
    }
    function myCollapse(elem, loc) {

        $("tr[data-loco='" + loc + "'] td").toggleClass('my-collapsed');
    }

    function table_loco_click_OLD(elem, loc) {

        if (zoom == elem) {

            $(elem).children('td').removeClass('oneShadeOfGrey');
            resetFit();
            zoom = null;

        } else {

            $(zoom).children('td').removeClass('oneShadeOfGrey'); // if any
            $(elem).children('td').addClass('oneShadeOfGrey');

            var marker = markers.find(function (l) { l.Loco == loc; });
            fit(marker);
            zoom = elem;
        }
    }

    $("tr th").click(function (e) {

        e.cancelBubble();

        e.stopPropagation(); // I think.. for IE

    });


</script>

@*
    +++++++++++++++++++++++++++++++++++++++++++++
        Leaflet
    +++++++++++++++++++++++++++++++++++++++++++++
*@
<script src="~/Scripts/leaflet-1.2.0.js"></script>


<script>

    @* INIT *@

    var mymap = L.map('map', {tap:false});
    mymap.setView([39.67696, -8.1447127], 7);
    mymap.dragging.disable();

@*
    var locoIcon = L.icon({
        iconUrl: '@Url.Content("~/Content/img/train.gif")', //'Content/img/train.gif',
        iconSize: [11, 13], // size of the icon
        iconAnchor: [5, 6], // point of the icon which will correspond to marker's location
        popupAnchor: [0, -6] // point from which the popup should open relative to the iconAnchor
    });
*@
@*
    var locoIcon = L.icon({
        iconUrl: '@Url.Content("~/Content/img/LE4701_side.png")', //'Content/img/train.gif',
        iconSize: [80, 19], // size of the icon
        iconAnchor: [40, 8], // point of the icon which will correspond to marker's location
        popupAnchor: [0, -8] // point from which the popup should open relative to the iconAnchor
    });
*@
    var locoIcon = L.icon({
            iconUrl: '@Url.Content("~/Content/img/red-dot.png")',
            iconSize: [32, 32], // size of the icon
            iconAnchor: [16, 32], // point of the icon which will correspond to marker's location
            popupAnchor: [0, -32] // point from which the popup should open relative to the iconAnchor
        });

    var markers = [];
    var token = 'pk.eyJ1IjoicGV0ZXJxbGl1IiwiYSI6ImpvZmV0UEEifQ._D4bRmVcGfJvo1wjuOpA1g';

    //L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
    //L.tileLayer('https://api.mapbox.com/styles/v1/clealp/ciopx36on000yepncv9d50zhb.html?fresh=true&title=true&access_token=pk.eyJ1IjoiY2xlYWxwIiwiYSI6ImNpb3B3cm5rOTAwMDB3OG1ib2h6cTV0M3UifQ.pwjQ3N47PhI5H2Amch1IGQ#8.3/39.206228/-8.583161/0', {
    /*L.tileLayer('https://api.mapbox.com/styles/v1/clealp/ciopx36on000yepncv9d50zhb.html?fresh=true&title=true&access_token={accessToken}', {
        attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a>',
        maxZoom: 18,
        //id: 'mapbox.light',
        accessToken: token
    }).addTo(mymap);
    */
    L.tileLayer('https://api.mapbox.com/styles/v1/clealp/ciopx36on000yepncv9d50zhb/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY2xlYWxwIiwiYSI6ImNpb3B3cm5rOTAwMDB3OG1ib2h6cTV0M3UifQ.pwjQ3N47PhI5H2Amch1IGQ', {
        maxZoom: 18,
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
        '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
        'Imagery © <a href="http://mapbox.com">Mapbox</a>',
    }).addTo(mymap);

    function updateMarker(loco, marker) {

        marker.setLatLng({ lat: loco.Latitude, lng: loco.Longitude });
        marker.setIcon(locoIcon);
        marker.bindPopup(loco.Loco);
        marker.Loco = loco.Loco;

        return marker;
    }

    function updateMarkers() {

        // apagar markers
        markers.forEach(function (m) {
            if ($.inArray(m.Loco, locos.map(function (l) { return l.Loco; })) == -1) {
                markers.pop(m);
                m.removeFrom(mymap);
            }
        });

        locos.forEach(function (l) {

            //var m = markers.find(function (e) { return e.Loco == l.Loco; }); // not supported on IE
            var m = $.grep(markers, function (e) { return e.Loco == l.Loco; })[0];
            if (!m) {
                m = updateMarker(l, new L.marker());
                markers.push(m);
                m.addTo(mymap);
            } else {
                m.setLatLng({ lat: l.Latitude, lng: l.Longitude });
            }
        });

        resetFit();
@*
        var group = new L.featureGroup(markers);
        mymap.fitBounds(group.getBounds(), { padding: [0, 0] });
        mymap.fitBounds(new L.featureGroup(markers).getBounds(), { padding: [0, 0] });

        if (locos.length < 2) {
            mymap.setZoom(11);
        }
*@
    }

    function fitMap(mrkrs) {

        // fitMap() overload uses global var
        mrkrs = mrkrs || markers;

        // if a single marker is passed, we transform it into an array
        if (mrkrs.Loco) {
            mrkrs = [mrkrs];
        }

        if(mrkrs.length == 0){
            mymap.setZoom(11);
        }
        else if (mrkrs.length == 1) {
            var marker = mrkrs[0];
            marker.openPopup();
            var bounds = L.latLngBounds([marker.getLatLng()]);
            mymap.fitBounds(bounds);
            mymap.setZoom(15);
        }
        else {
            var bounds = new L.featureGroup(markers).getBounds();
            mymap.fitBounds(bounds, { padding: [8, 8] });
        }
    }


    function fit(marker) {

        @* http://usabilityetc.com/2016/07/how-to-center-a-leaflet-map-on-a-marker/ *@

        var latLngs = [marker.getLatLng()];
        var markerBounds = L.latLngBounds(latLngs);
        mymap.fitBounds(markerBounds);
        mymap.setZoom(15);
        marker.openPopup();

    }

    function resetFit() {

        // close all popups
        markers.forEach(function (m) { m.closePopup(); });

        var group = new L.featureGroup(markers);
        mymap.fitBounds(group.getBounds(), { padding: [0, 0] });

        if (locos.length < 2) {
            mymap.setZoom(11);
        }
    }




</script>


@*
    +++++++++++++++++++++++++++++++++++++++++++++
        SignalR
    +++++++++++++++++++++++++++++++++++++++++++++
*@
<script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>

<script type="text/javascript">

$(function () {
    // Declare a proxy to reference the hub.
    var notifications = $.connection.messagesHub;

    //debugger;
    // Create a function that the hub can call to broadcast messages.
    notifications.client.updateMessages = function () {
        getAllMessages();
    };
    // Start the connection.
    $.connection.hub.start().done(function () {
        console.log("signalr: connection started");
      //  getAllMessages();
    }).fail(function (e) {
        console.log("signalr: "+e);
    });
});

function getAllMessages()
{
    //var tbl = $('#messagesTable');
    $.ajax({
        url: '@Url.Action("GetMessages","Home")', //'home/GetMessages',
        contentType: 'application/html ; charset:utf-8',
        type: 'GET',
        dataType: 'html'
    }).success(function (result) {

        locos = JSON.parse(result);
        //console.log(locos);
        updateMarkers();
        updateTable();

    }).error(function (err) {
        console.log('signalr: ERROR retrieving data from the server');
        console.log(err);
    });
}

getAllMessages();

</script>

@* 
    +++++++++++++++++++++++++++++++++++++++++++++
    Export to xls 
    +++++++++++++++++++++++++++++++++++++++++++++
*@

<script>
    @* https://codepen.io/kostas-krevatas/pen/mJyBwp *@
@*
    var elems;
    // My
    Node.prototype.filterByClass = function(classname){
        elems = this.getElementsByClassName(classname);
        [].forEach.call(elems, function (e) {
            this.removeChild(e);
        });
    }

    $(document).ready(function () {
        $("#btnExport").click(function (e) {
            e.preventDefault();

            //getting data from our table
            var data_type = 'data:application/vnd.ms-excel';

            var table_div = $('#table_wrapper').clone();
            table_div.find('.no-export').remove();
            var table_html2 = table_div.html().replace(/ /g, '%20');


            var d = new Date();
            var a = document.createElement('a');
            a.href = data_type + ', ' + table_html2;
            a.download = 'locos_' + d.getFullYear() + (d.getUTCMonth() + 1) + d.getUTCDate() + '_' + d.getHours() + d.getMinutes() + '.xls';
            a.click();
        });
    });
*@
</script>
}


